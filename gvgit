#!/bin/sh
# (c) 2018 Michał Górny
# Released under the terms of 2-clause BSD license.

set -e

export GV_BINDIR=${0%/*}
export GV_CACHEDIR=${XDG_CACHE_HOME:-~/.cache}/gverify

# default config
GV_KEYRING_URL=https://qa-reports.gentoo.org/output/committing-devs.gpg
GV_SEED_URL=https://api.gentoo.org/gentoo-keys/seeds/gentoo-devs.seeds
GV_REFRESH_MIN=15

# support user config
if [ -s "${XDG_CONFIG_HOME:-~/.config}/gverify.conf" ]; then
	. "${XDG_CONFIG_HOME:-~/.config}/gverify.conf"
fi

# find filenames from URLs
export GV_KEYRING_FILENAME=${GV_KEYRING_URL##*/}
export GV_SEED_FILENAME=${GV_SEED_URL##*/}

mkdir -p "${GV_CACHEDIR}"
# update every N minutes
GV_FORCE_REFRESH=0
[ -n "$(find "${GV_CACHEDIR}" -name ".last-update" -mmin "-${GV_REFRESH_MIN}")" ] ||
	GV_FORCE_REFRESH=1
if [ ${GV_FORCE_REFRESH} == 1 ] || ! [ -f "${GV_CACHEDIR}/${GV_KEYRING_FILENAME}" ]; then
	wget -q -P "${GV_CACHEDIR}" -N "${GV_KEYRING_URL}"
	touch "${GV_CACHEDIR}"/.last-update
fi
if [ ${GV_FORCE_REFRESH} == 1 ] || ! [ -f "${GV_CACHEDIR}/${GV_SEED_FILENAME}" ]; then
	wget -q -P "${GV_CACHEDIR}" -N "${GV_SEED_URL}"
	touch "${GV_CACHEDIR}"/.last-update
fi

export GNUPGHOME=$(mktemp -d)
trap 'rm -rf "${GNUPGHOME}"' EXIT

cp "${GV_CACHEDIR}"/"${GV_KEYRING_FILENAME}" "${GNUPGHOME}"/pubring.gpg

git -c gpg.program="${GV_BINDIR}/gvgit-gpg-wrapper" "${@}"
